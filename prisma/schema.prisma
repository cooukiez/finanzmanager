// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @unique
  email           String    @unique
  name            String    @unique
  role            String    @default("user")
  password        String    @default("1234")
  accounts        Account[]
  sessions        Session[]
  debtsAsDebtor   Debt[]    @relation("DebtDebtor")
  debtsAsCreditor Debt[]    @relation("DebtCreditor")
}

model Session {
  id        String   @id @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  expiresAt DateTime
}

model Account {
  id           String            @id @unique
  name         String
  owner        User              @relation(fields: [ownerId], references: [id])
  ownerId      String
  transactions Transaction[]
  assocGr      AccountsGrouped[]
}

model Transaction {
  id        String   @id @unique
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  amount    Float    @default(0)
  type      String
  date      DateTime @default(now())
}

model Group {
  id       String            @id @unique
  name     String
  accounts AccountsGrouped[]
}

model AccountsGrouped {
  id        String  @id @unique
  account   Account @relation(fields: [accountId], references: [id])
  accountId String
  group     Group   @relation(fields: [groupId], references: [id])
  groupId   String
}

model Debt {
  id         String   @id @unique
  debtorId   String
  creditorId String
  amount     Decimal
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  debtor   User @relation(fields: [debtorId], references: [id], name: "DebtDebtor")
  creditor User @relation(fields: [creditorId], references: [id], name: "DebtCreditor")
}
